name: CI

on:
  push:
    branches:
      - master
    tags:
      - '**'
  pull_request:

env:
  NUMBA_NUM_THREADS: 1
  MPLBACKEND: Agg
  PYTEST_ADDOPTS: --color=yes
  GITHUB_PR_NUMBER: ${{ github.event.number }}

jobs:
  tests:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            python-version: "3.8"
            install-method: conda

          - os: ubuntu-latest
            python-version: "3.9"
            install-method: conda

          - os: ubuntu-latest
            python-version: "3.10"
            install-method: conda
            codecov: true

          - os: ubuntu-latest
            python-version: "3.10"
            install-method: pip

          - os: macos-latest
            python-version: "3.10"
            install-method: conda

          - os: macos-latest
            python-version: "3.8"
            install-method: pip

    defaults:
      run:
        shell: bash -l {0}

    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: cache test data
        uses: actions/cache@v3
        with:
          path: ~/.cache/ctapipe
          key: ctapipe-test-data

      - name: Prepare conda installation
        if: matrix.install-method == 'conda'
        env:
          PYTHON_VERSION: ${{ matrix.python-version }}
        run: |
          # fix mamba error that the directory does not exist
          mkdir -p ~/conda_pkgs_dir/cache
          # setup correct python version
          sed -i -e "s/- python=.*/- python=$PYTHON_VERSION/g" environment.yml

      - name: Conda setup
        if: matrix.install-method == 'conda'
        uses: conda-incubator/setup-miniconda@v2
        with:
          mamba-version: "*"
          auto-update-conda: true
          activate-environment: "cta-dev"
          environment-file: environment.yml

      - name: Python setup
        if: matrix.install-method == 'pip'
        uses: conda-incubator/setup-miniconda@v2
        with:
          mamba-version: "*"
          channels: conda-forge,default
          python-version: ${{ matrix.python-version }}

      - name: Update pip
        if: matrix.install-method == 'pip'
        run: pip install -U pip

      - name: Install dependencies
        run: |
          python --version
          pip install codecov pytest-cov flake8 pytest-xdist 'coverage!=6.3.0'
          pip install .[all]
          pip freeze

      - name: Static codechecks
        # need to use a login shell for the conda setup to work
        shell: bash -leo pipefail {0}
        run: |
          flake8 ctapipe

      - name: Tests
        # need to use a login shell for the conda setup to work
        shell: bash -leo pipefail {0}
        run: |
          cd $(mktemp -d)
          pytest -n auto --dist loadscope \
            --cov --cov-report=xml \
            --doctest-modules --doctest-glob='*.rst' \
            --ignore=$HOME/work/ctapipe/ctapipe/docs/conf.py \
            --pyargs ctapipe $HOME/work/ctapipe/ctapipe/docs

          ctapipe-info --version

      - uses: codecov/codecov-action@v2
        if: matrix.codecov

  docs:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.8"

      - name: Install doc dependencies
        run: |
          sudo apt update --yes && sudo apt install --yes git build-essential pandoc graphviz
          pip install -U pip setuptools wheel
          pip install -e .[docs]
          git describe --tags
          python -c 'import ctapipe; print(ctapipe.__version__)'

      - name: Build docs
        run: make doc

      - name: Deploy to gihub pages
        # only run on push to master
        if: ${{ github.event_name == 'push' && github.ref == 'refs/heads/master' }}
        uses: JamesIves/github-pages-deploy-action@3.7.1
        with:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          BRANCH: gh-pages
          FOLDER: docs/_build/html
          CLEAN: true
          SINGLE_COMMIT: true
